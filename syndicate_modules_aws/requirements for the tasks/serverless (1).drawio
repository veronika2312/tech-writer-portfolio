<mxfile host="app.diagrams.net" modified="2023-12-07T12:32:28.637Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36" etag="MuDULlT3Ue5ZmIO_8gcI" version="22.1.7" type="google">
  <diagram name="Page-1" id="tTgseWRDQWZs9vCkVC0T">
    <mxGraphModel grid="1" page="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-1" value="&lt;font size=&quot;1&quot;&gt;&lt;b style=&quot;font-size: 20px;&quot;&gt;10 Serverless Tasks&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry width="210" height="40" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-2" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1.1. Hello&amp;nbsp;World Lambda&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="120" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-3" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="190" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-5" value="AWS Lambda&lt;br&gt;&#39;hello_world&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-3">
          <mxGeometry x="61" y="61" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-6" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy the &#39;hello_world&#39; function that returns the following response:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;statusCode&quot;: 200,&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;message&quot;: &quot;Hello from Lambda&quot;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="290" y="170" width="380" height="100" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-8" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;3. Generate lambda with runtime java&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;4?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;5?. Execute the function via AWS Console to ensure the expected output is obtained &amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="290" y="290" width="480" height="100" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-9" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1.2. AWS Lambda with Function URL&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="450" width="290" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-22" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="500" width="200" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-23" value="AWS Lambda&lt;br&gt;&#39;hello_world&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-22">
          <mxGeometry x="61" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-24" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy the function with configured Function URL that returns the following response&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;from the /hello GET resource:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;statusCode&quot;: 200,&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;message&quot;: &quot;Hello from Lambda&quot;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="310" y="490" width="480" height="110" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-25" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;3. Generate lambda with runtime java&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;4. Configure lambda with function URL enabled&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;4?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;5?. Configure API Client you like (Postman, Insomnia, etc) to make request&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;to Function URL to verify if the expected result is returned &amp;nbsp;&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="310" y="600" width="430" height="130" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-26" value="&lt;b&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;1. Lambda + Interfaces&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="80" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-27" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1.3. AWS Lambda with API Gateway&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="770" width="280" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-28" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="820" width="280" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-29" value="AWS Lambda&lt;br&gt;&#39;hello_world&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-28">
          <mxGeometry x="180" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-33" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-28" source="lQzBzTr9eIIfH-eJRsnF-32" target="lQzBzTr9eIIfH-eJRsnF-29">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-32" value="API Gateway&lt;br&gt;REST API &#39;task3_api&#39;&lt;br&gt;stage: &#39;api&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#E7157B;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.api_gateway;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-28">
          <mxGeometry x="20" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-30" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy the function and API Gateway with the following API resources:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;/hello GET&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Request: {}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;statusCode&quot;: 200,&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&quot;message&quot;: &quot;Hello from Lambda&quot;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="350" y="815" width="400" height="140" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-31" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate the API Gateway meta data with as it is required&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5?. Configure API Client you like (Postman, Insomnia, etc) to make&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;request to API Gateway stage to verify if the expected result is returned &amp;nbsp;&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="355" y="955" width="410" height="130" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-42" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1.4. AWS Lambdas &amp;amp; SQS + SNS&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="5" y="1130" width="260" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-43" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="1180" width="280" height="340" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-44" value="AWS Lambda&lt;br&gt;&#39;sqs_handler&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-43">
          <mxGeometry x="180" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-45" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-43" source="lQzBzTr9eIIfH-eJRsnF-49" target="lQzBzTr9eIIfH-eJRsnF-44">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="100" y="99.99999999999977" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-49" value="SQS queue&lt;br&gt;&#39;async_queue&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#E7157B;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.sqs;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-43">
          <mxGeometry x="20" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-50" value="SNS topic&lt;br&gt;&#39;lambda_topic&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#E7157B;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.sns;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-43">
          <mxGeometry x="22" y="200" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-51" value="AWS Lambda&lt;br&gt;&#39;sns_handler&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-43">
          <mxGeometry x="180" y="200" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-52" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-43" source="lQzBzTr9eIIfH-eJRsnF-50" target="lQzBzTr9eIIfH-eJRsnF-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-47" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Create 2 integrations:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;1. Lambda + SQS queue:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The &#39;SQS Handler&#39; lambda must be triggered by SQS queue and just print&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;the SQS message content to the CloudWatch Logs&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;2. Lambda + SNS topic:&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The &#39;SNS Handler&#39; function must be triggered by SNS topic and just print&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;the SNS message contact to the CloudWatch Logs&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="340" y="1180" width="420" height="130" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-48" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate &#39;SQS Handler&#39; lambda function with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate SQS queue resource in meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Configure the lambda to be triggered by the queue&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;6. Implement the logic of the function&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7. Build and Deploy the project with the syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8. Send message to the SQS queue and check the lambda flushes message&lt;/div&gt;&lt;div style=&quot;&quot;&gt;content to the CloudWatch Logs &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;9. Generate &#39;SNS Handler&#39; lambda function with runtime java8&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;10. Generate&amp;nbsp;SNS&amp;nbsp;topic resource in meta&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;11. Configure the lambda to be triggered by the topic&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;12. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;13. Build and Deploy the project with the syndicate&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;12. Send message to the&amp;nbsp;SNS&amp;nbsp;topic and check the lambda flushes message&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;content to the CloudWatch Logs&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="350" y="1310" width="430" height="250" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-53" value="&lt;b&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;2. Lambdas + Persistence&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="1570" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-58" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="189" y="1640" width="440" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-65" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-58" source="lQzBzTr9eIIfH-eJRsnF-59" target="lQzBzTr9eIIfH-eJRsnF-64">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-59" value="AWS Lambda&lt;br&gt;&#39;api_handler&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-58">
          <mxGeometry x="180" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-58" source="lQzBzTr9eIIfH-eJRsnF-61" target="lQzBzTr9eIIfH-eJRsnF-59">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-61" value="API Gateway&lt;br&gt;REST API &#39;task5_api&#39;&lt;br&gt;stage: &#39;api&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#E7157B;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.api_gateway;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-58">
          <mxGeometry x="20" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-64" value="DynamoDB&lt;br&gt;&#39;Events&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-58">
          <mxGeometry x="339" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-62" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy the function, API Gateway and the DynamoDB table &#39;Events&#39;.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;This application must save all the events come to API to the &#39;Events&#39; table.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The API must expose the following resource:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;/events POST&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Request:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&quot;principalId&quot;: int &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;// id pf the principal&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;content&quot;: {any Map&amp;lt;String, String&amp;gt;}&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&quot;statusCode&quot;: 201,&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;event&quot;: &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;// &lt;/span&gt;&lt;/span&gt;created event json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&#39;Event&#39; data model:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//uuidv4&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;principalId&quot;: &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;//int&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;createdAt&quot;: &lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;//date time in ISO 8601 formatted string&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;body&quot;: { /** &#39;content&#39; value */ }&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b&gt;Example:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Request:&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;principalId&quot;: 1&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;content&quot;: {&quot;name&quot;: &quot;John&quot;, &quot;surname&quot;: &quot;Doe&quot;}&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Event saved to DynamoDB:&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;f356279c-9d04-45fb-9b6e-4ee331e6f4e6&quot;, //generated uuid v4&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;principalId&quot;: 1,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;createdAt&quot;: &quot;2023-10-20T08:51:33Z&quot;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;body&quot;:&amp;nbsp;{&quot;name&quot;: &quot;John&quot;, &quot;surname&quot;: &quot;Doe&quot;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;statusCode&quot;: 201,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;event&quot;: {&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;f356279c-9d04-45fb-9b6e-4ee331e6f4e6&quot;, //generated uuid v4&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;principalId&quot;: 1,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;createdAt&quot;: &quot;2023-10-20T08:51:33Z&quot;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;body&quot;:&amp;nbsp;{&quot;name&quot;: &quot;John&quot;, &quot;surname&quot;: &quot;Doe&quot;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; } &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="1850" width="420" height="690" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-63" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate the API Gateway meta data with /events POST resource&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Generate the DynamoDB table meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8?. Configure API Client you like (Postman, Insomnia, etc) to make&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;request to API Gateway stage to verify if the expected result is&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;returned &amp;nbsp;&amp;amp; the event is stored to the table &amp;nbsp;&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="433" y="1850" width="390" height="170" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-66" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2.1. AWS Lambda + DynamoDB&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="1610" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-67" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2.6. AWS Lambda + DynamoDB Stream&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="2560" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-74" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="160" y="2610" width="506" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-76" value="AWS Lambda&lt;br&gt;&#39;audit_producer&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-74">
          <mxGeometry x="260" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-79" value="DynamoDB&lt;br&gt;&#39;Configuration&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-74">
          <mxGeometry x="20" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-81" value="Stream&lt;br&gt;&#39;conf_stream&#39;" style="sketch=0;outlineConnect=0;fontColor=#232F3E;gradientColor=none;fillColor=#C925D1;strokeColor=none;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;pointerEvents=1;shape=mxgraph.aws4.dynamodb_stream;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-74">
          <mxGeometry x="101" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-82" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-74" source="lQzBzTr9eIIfH-eJRsnF-81" target="lQzBzTr9eIIfH-eJRsnF-76">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-83" value="DynamoDB&lt;br&gt;&#39;Audit&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-74">
          <mxGeometry x="410" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-84" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-74" source="lQzBzTr9eIIfH-eJRsnF-76" target="lQzBzTr9eIIfH-eJRsnF-83">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-80" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Generate the &#39;Configuration&#39; table meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6. Configure the DynamoDB Stream on the &#39;Configuration&#39; table set&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;to trigger the lambda function&lt;/div&gt;7. Generate the &#39;Audit&#39; table meta&lt;div style=&quot;&quot;&gt;6. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8?. Test the application by creating &amp;amp; changing the configuration items,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;verify if the audit items created correctly &amp;nbsp;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="415" y="2815" width="400" height="180" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-85" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy a function and 2 DynamoDB tables: Configuration and Audit. &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;This application must track all the changes made on the configuration&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;items to the Audit table.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The &#39;Configuration&#39; data is the following:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;key&quot;: // string, key of the configuration item&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;value&quot;: // string&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;u&gt;Example 1:&lt;/u&gt; no items stored in &#39;Configuration&#39; table.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The following item has been created:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;key&quot;: &quot;CACHE_TTL_SEC&quot;,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;value&quot;: &quot;3600&quot;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;After the configuration item is saved to the table the following audit item&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;has been created in the &#39;Audit&#39; table:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;id&quot;: // string, uuidv4&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;itemKey&quot;: &quot;CACHE_TTL_SEC&quot;,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;modificationTime&quot;: // string, ISO8601 formatted string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;newValue&quot;: {&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;key&quot;: &quot;CACHE_TTL_SEC&quot;,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;value&quot;: &quot;3600&quot;&lt;/div&gt;&amp;nbsp; &amp;nbsp;},&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;u&gt;Example 2:&lt;/u&gt; the following item has been stored in the &#39;Configuration&#39; table:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;key&quot;: &quot;CACHE_TTL_SEC&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;value&quot;: &quot;3600&quot;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;After the value of this configuration item has been changed&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;from 3600 to 1800, the audit item has been created&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;in the &#39;Audit&#39; table with the following content:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;id&quot;: // string, uuidv4&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;itemKey&quot;: &quot;CACHE_TTL_SEC&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;modificationTime&quot;: // string, ISO8601 formatted string&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;updatedAttribute&quot;: &quot;value&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;oldValue&quot;: &quot;3600&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;newValue&quot;: &quot;1800&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="12" y="2820" width="420" height="670" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-97" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="203" y="3580" width="420" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-98" value="AWS Lambda&lt;br&gt;&#39;uuid_generator&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-97">
          <mxGeometry x="173" y="59" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-101" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-97" target="lQzBzTr9eIIfH-eJRsnF-98">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="100" y="99" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-107" value="S3&lt;br&gt;&#39;uuid-storage&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#7AA116;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.s3;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-97">
          <mxGeometry x="320" y="60" width="78" height="78" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-108" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-97" source="lQzBzTr9eIIfH-eJRsnF-98" target="lQzBzTr9eIIfH-eJRsnF-107">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="o-fOTvBTGmBdQHoOd4Tv-1" value="CloudWatch&lt;br&gt;Rule&lt;br&gt;&#39;uuid_trigger&#39;" style="sketch=0;outlineConnect=0;fontColor=#232F3E;gradientColor=none;fillColor=#E7157B;strokeColor=none;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;pointerEvents=1;shape=mxgraph.aws4.rule_2;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-97">
          <mxGeometry x="17" y="60" width="80" height="77.95" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-104" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate the S3 Bucket meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Generate the CloudWatch Rule meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8?. Test the application by creating &amp;amp; changing the configuration items,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;verify if the audit items created correctly &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;9. Clean application&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="411" y="3790" width="400" height="170" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-105" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Deploy a Lambda Function,&lt;b&gt; CloudWatch Rule&lt;/b&gt; and S3 bucket.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The application must generate 10 random uuid per 1 minute and store&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;it to the S3 within a new file.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Example:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Execution at 12:00&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The file with lambda execution start time created in S3 bucket with&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;the following content:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;File Name: ISO time of execution start&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;ids&quot;: [&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;9bae6daa-2f72-45d3-ad58-1221de19caaa&quot;,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ... and 9 more&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; ]&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;DO NOT FORGET TO CLEAN RESOURCES TO AVOID CHARGES&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="3790" width="390" height="270" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-109" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3.1. AWS Lambda + Layers&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="4130" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-116" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="190" y="4170" width="480" height="200" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-162" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-116" source="lQzBzTr9eIIfH-eJRsnF-117" target="lQzBzTr9eIIfH-eJRsnF-161">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-117" value="AWS Lambda&lt;br&gt;&#39;api_handler&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-116">
          <mxGeometry x="203.5" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-123" value="AWS Lambda Layer &lt;br&gt;&#39;sdk_layer&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fillColor=#dae8fc;strokeColor=#6c8ebf;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-116">
          <mxGeometry x="50.5" y="61" width="78" height="78" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-125" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-116" source="lQzBzTr9eIIfH-eJRsnF-117" target="lQzBzTr9eIIfH-eJRsnF-123">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-161" value="&lt;span style=&quot;&quot;&gt;Open-Meteo&lt;br&gt;API&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-116">
          <mxGeometry x="360" y="60" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-126" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda with runtime java8&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Implement a Open-Meteo API&amp;nbsp;SDK - just a simple class with method&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;to retrieve the latest weather forecast&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Assemble LambdaLayer with Open-Meteo API SDK&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6. Implement the logic of the function using the imported SDK from the layer&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8?. Test the application by creating &amp;amp; changing the configuration items,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;verify if the audit items created correctly &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;9. Clean application&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="16.5" y="4510" width="430" height="180" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-127" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The task is to:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;1. build a simple SDK for Open-Meteo API&amp;nbsp;&lt;/div&gt;&lt;a href=&quot;https://api.open-meteo.com/v1/forecast?latitude=50.4547&amp;amp;longitude=30.5238&amp;amp;hourly=temperature_2m&amp;amp;timezone=Europe%2FKyiv&quot;&gt;https://api.open-meteo.com/v1/forecast?latitude=50.4547&amp;amp;longitude=30.5238&amp;amp;hourly=temperature_2m&amp;amp;timezone=Europe%2FKyiv&lt;/a&gt;&lt;div style=&quot;text-align: left;&quot;&gt;2. assemble the SDK as a Lambda Layer&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;3. build a lambda function with function URL (/weather GET) that&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;uses the Layer with the SDK to return the latest weather&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;forecast obtained from Open-Meteo API&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="12" y="4370" width="720" height="130" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-133" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3.2. AWS Lambda +&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;XRay&lt;/b&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1.5" y="4810" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-134" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="121.5" y="4866" width="480" height="294" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-158" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-134" source="lQzBzTr9eIIfH-eJRsnF-135" target="lQzBzTr9eIIfH-eJRsnF-157">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-160" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-134" source="lQzBzTr9eIIfH-eJRsnF-135" target="lQzBzTr9eIIfH-eJRsnF-159">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-135" value="AWS Lambda&lt;br&gt;&#39;processor&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-134">
          <mxGeometry x="207" y="162" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-137" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-134" source="lQzBzTr9eIIfH-eJRsnF-135" target="lQzBzTr9eIIfH-eJRsnF-140">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="168" y="201" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-140" value="XRay" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.xray;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-134">
          <mxGeometry x="53" y="162" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-157" value="DynamoDB&lt;br&gt;&#39;Weather&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-134">
          <mxGeometry x="360" y="162" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-159" value="Open-Meteo&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;API" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-134">
          <mxGeometry x="207" y="34" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-138" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda + function URL&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate the DynamoDB meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6. Configure the XRay to record all the segments from the lambda&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;8?. Test the application by creating &amp;amp; changing the configuration items,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;verify if the audit items created correctly &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;9. Clean application&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="380" y="5330" width="400" height="170" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-139" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;To deploy the application which pulls the latest weather forecast from&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;the Open-Meteo API&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;https://api.open-meteo.com/v1/forecast?latitude=50.4547&amp;amp;longitude=30.5238&amp;amp;hourly=temperature_2m&amp;amp;timezone=Europe/Kyiv&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;and pushes it to the &#39;Weather DynamoDB Table with the following schema:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &quot;id&quot;: str, // uuidv4&lt;br&gt;&amp;nbsp; &quot;forecast&quot;: {&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;elevation&quot;: number,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;generationtime_ms&quot;: number,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;hourly&quot;: {&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;temperature_2m&quot;: [number],&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;time&quot;: [str]&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;hourly_units&quot;: {&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;temperature_2m&quot;: str,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;time&quot;: str&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;latitude&quot;: number,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;longutude&quot;: number,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;timezone&quot;: str,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;timezone_abbreviation&quot;: str,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;utc_offset_seconds&quot;: number&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The goal is to trace the execution of the code using the XRay:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;pull the data from Open-Meteo API, push to DynamoDb.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The lambda should be triggered using Function URL&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="22" y="5170" width="700" height="450" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-143" value="#10" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="765" y="5648" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-144" value="&lt;b&gt;&lt;font&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3.&amp;nbsp;Miscellaneous&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="4090" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-145" value="#1" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="120" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-146" value="#2" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="450" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-147" value="#3" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="770" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-148" value="#4" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="1130" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-149" value="#5" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="1610" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-150" value="#6" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="2560" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-151" value="#7" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="3530" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-152" value="#8" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="760" y="4130" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-153" value="#9" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="761.5" y="4810" width="40" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-154" value="&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;3.2. Serverless API + Cognito&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry y="5648" width="230" height="30" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-173" value="AWS Cloud" style="points=[[0,0],[0.25,0],[0.5,0],[0.75,0],[1,0],[1,0.25],[1,0.5],[1,0.75],[1,1],[0.75,1],[0.5,1],[0.25,1],[0,1],[0,0.75],[0,0.5],[0,0.25]];outlineConnect=0;gradientColor=none;html=1;whiteSpace=wrap;fontSize=12;fontStyle=0;container=1;pointerEvents=0;collapsible=0;recursiveResize=0;shape=mxgraph.aws4.group;grIcon=mxgraph.aws4.group_aws_cloud_alt;strokeColor=#232F3E;fillColor=none;verticalAlign=top;align=left;spacingLeft=30;fontColor=#232F3E;dashed=0;" vertex="1" parent="1">
          <mxGeometry x="120" y="5688" width="480" height="294" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-174" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-173" source="lQzBzTr9eIIfH-eJRsnF-176" target="lQzBzTr9eIIfH-eJRsnF-179">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-176" value="AWS Lambda&lt;br&gt;&#39;api_handler&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#ED7100;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.lambda;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-173">
          <mxGeometry x="200.5" y="160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-177" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-173" source="lQzBzTr9eIIfH-eJRsnF-176" target="lQzBzTr9eIIfH-eJRsnF-181">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="126.5" y="200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-179" value="DynamoDB&lt;br&gt;&#39;Reservations&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-173">
          <mxGeometry x="360" y="160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-181" value="API Gateway&lt;br&gt;REST API &#39;task10_api&#39;&amp;nbsp;&lt;br&gt;stage: &#39;api&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#E7157B;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.api_gateway;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-173">
          <mxGeometry x="40" y="160" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-183" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=classic;startFill=1;endArrow=none;endFill=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-173" source="lQzBzTr9eIIfH-eJRsnF-182" target="lQzBzTr9eIIfH-eJRsnF-181">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-182" value="Cognito&lt;br&gt;UserPool&lt;br&gt;&#39;simple-booking-userpool&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#DD344C;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.cognito;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-173">
          <mxGeometry x="120.5" y="20" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="veS83xPDvFRlAsBhBXbH-1" value="DynamoDB&lt;br&gt;&#39;Tables&#39;" style="sketch=0;points=[[0,0,0],[0.25,0,0],[0.5,0,0],[0.75,0,0],[1,0,0],[0,1,0],[0.25,1,0],[0.5,1,0],[0.75,1,0],[1,1,0],[0,0.25,0],[0,0.5,0],[0,0.75,0],[1,0.25,0],[1,0.5,0],[1,0.75,0]];outlineConnect=0;fontColor=#232F3E;fillColor=#C925D1;strokeColor=#ffffff;dashed=0;verticalLabelPosition=bottom;verticalAlign=top;align=center;html=1;fontSize=12;fontStyle=0;aspect=fixed;shape=mxgraph.aws4.resourceIcon;resIcon=mxgraph.aws4.dynamodb;" vertex="1" parent="lQzBzTr9eIIfH-eJRsnF-173">
          <mxGeometry x="360" y="20" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="veS83xPDvFRlAsBhBXbH-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="lQzBzTr9eIIfH-eJRsnF-173" source="lQzBzTr9eIIfH-eJRsnF-176" target="veS83xPDvFRlAsBhBXbH-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-184" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;b&gt;Expected solve way:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1. Install aws-syndicate&lt;/div&gt;&lt;div style=&quot;&quot;&gt;2. Generate project&lt;/div&gt;&lt;div style=&quot;&quot;&gt;3. Generate lambda&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;4. Generate the DynamoDB table meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Generate the Cognito meta&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5. Implement the logic of the function&lt;/div&gt;&lt;div style=&quot;&quot;&gt;6?. Build and Deploy project with syndicate tool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;7?. Test the application by creating &amp;amp; changing the configuration items,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;verify if the audit items created correctly &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;9. Clean application&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="420" y="5998" width="400" height="170" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-185" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;Task definition:&amp;nbsp;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;The task is to create the API service for Tables Booking at your&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;favourite restaurant.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;u&gt;All the API methods should be maintained by a single lambda function.&lt;/u&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;There following API resources must be defined:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;/signup POST&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Request:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;firstName&quot;: // string&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;lastName&quot;: // string&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;email&quot;: // email validation&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;password&quot;: // alphanumeric + any of &quot;$%^*&quot;, 12+ chars&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Response:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;200 / 400&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;PLEASE NOTE:&lt;/b&gt; while creating user entity in the Cognito UserPool,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;please specify user creation request with the messageAction(&quot;SUPPRESS&quot;) to avoid email notification sending after user is registered.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;To avoid email quota errors while verification, make signup procedure without email sending.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;For example: if the software.amazon.awssdk.services.cognitoidentityprovider.model.AdminCreateUserRequest.builder()&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;used, then add builder method messageAction(&quot;SUPPRESS&quot;).&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;/signin POST&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Request:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&quot;email&quot;: // email&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;password&quot;: // alphanumeric + any of &quot;$%^*&quot;, 12+ chars&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;accessToken&quot;: // string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;/tables GET&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Headers:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;Authorization: Bearer $accessToken&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Request: {}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;tables&quot;: [&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;id&quot;: // int&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;number&quot;: // int, number of the table&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;places&quot;: // int, amount of people to sit at the table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;isVip&quot;: // boolean, is the table in the VIP hall&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;minOrder&quot;: // optional. int, table deposit required to book it&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; ]&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;/tables POST&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Headers:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;Authorization: Bearer $accessToken&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Request:&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: // int&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;number&quot;: // int, number of the table&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;places&quot;: // int, amount of people to sit at the table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;isVip&quot;: // boolean, is the table in the VIP hall&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;minOrder&quot;: // optional. int, table deposit required to book it&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: $table_id // int, id of the created table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;/tables/:tableId GET&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Headers:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;Authorization: Bearer $accessToken&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Request: {}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;id&quot;: // int&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;number&quot;: // int, number of the table&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;places&quot;: // int, amount of people to sit at the table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;isVip&quot;: // boolean, is the table in the VIP hall&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;minOrder&quot;: // optional. int, table deposit required to book it&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;/reservations POST&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Headers:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;Authorization: Bearer $accessToken&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Request:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;tableNumber&quot;: // int, number of the table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;clientName&quot;: //string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;phoneNumber&quot;: //string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;   &quot;date&quot;: // string in yyyy-MM-dd format&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;slotTimeStart&quot;: // string in &quot;HH:MM&quot; format, like &quot;13:00&quot;,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;slotTimeEnd&quot;: // string in &quot;HH:MM&quot; format, link &quot;15:00&quot;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Response:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;200 {reservationId: &quot;uuidv4 string&quot;} in case reservation is committed&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;400 in case reservation can&#39;t be created&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;/reservations GET&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Headers:&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;Authorization: Bearer $accessToken&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;reservations&quot;: [&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;tableNumber&quot;: // int, number of the table&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;clientName&quot;: //string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;phoneNumber&quot;: //string&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;date&quot;: // string in yyyy-MM-dd format&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;slotTimeStart&quot;: // string in &quot;HH:MM&quot; format, like &quot;13:00&quot;,&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&quot;slotTimeEnd&quot;: // string in &quot;HH:MM&quot; format, link &quot;15:00&quot;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;]&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="16.5" y="5998" width="740" height="1680" as="geometry" />
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-186" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="820" y="420" as="sourcePoint" />
            <mxPoint x="10" y="420" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-187" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="822" y="110" as="sourcePoint" />
            <mxPoint x="12" y="110" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-189" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="823" y="750" as="sourcePoint" />
            <mxPoint x="13" y="750" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-190" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="823" y="1110" as="sourcePoint" />
            <mxPoint x="13" y="1110" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-191" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="822" y="1569" as="sourcePoint" />
            <mxPoint x="12" y="1569" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-192" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="822" y="1600" as="sourcePoint" />
            <mxPoint x="12" y="1600" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-193" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="819" y="2550" as="sourcePoint" />
            <mxPoint x="9" y="2550" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-194" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="819" y="3489" as="sourcePoint" />
            <mxPoint x="9" y="3489" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-195" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="823" y="4070" as="sourcePoint" />
            <mxPoint x="13" y="4070" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-196" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="823" y="4129" as="sourcePoint" />
            <mxPoint x="13" y="4129" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-198" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="824.5" y="4800" as="sourcePoint" />
            <mxPoint x="14.5" y="4800" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-199" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="818" y="5628" as="sourcePoint" />
            <mxPoint x="8" y="5628" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="lQzBzTr9eIIfH-eJRsnF-200" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="818" y="7598" as="sourcePoint" />
            <mxPoint x="8" y="7598" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="o-fOTvBTGmBdQHoOd4Tv-2" value="&lt;font&gt;&lt;b&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2.7. AWS Lambda + CloudWatch Rule + S3&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="5" y="3530" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hdTfz2v4di6dl1UqmnkL-1" value="UPDATED" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#b85450;fillColor=#f8cecc;" vertex="1" parent="1">
          <mxGeometry x="681.5" y="4970" width="80" height="30" as="geometry" />
        </mxCell>
        <mxCell id="hdTfz2v4di6dl1UqmnkL-2" value="UPDATED" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#b85450;fillColor=#f8cecc;" vertex="1" parent="1">
          <mxGeometry x="666" y="865" width="80" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
